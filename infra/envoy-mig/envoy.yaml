node:
  id: "loadgen-envoy-${NODE_ID}"
  cluster: "loadgen-envoy-cluster"
  locality:
    region: "${REGION}"
    zone: "${ZONE}"

admin:
  access_log:
  - name: envoy.access_loggers.stdout
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

dynamic_resources:
  eds_config:
    api_config_source:
      api_type: GRPC
      transport_api_version: V3
      grpc_services:
      - envoy_grpc:
          cluster_name: xds_cluster
      set_node_on_first_message_only: true
  rtds_config:
    api_config_source:
      api_type: GRPC
      transport_api_version: V3
      grpc_services:
      - envoy_grpc:
          cluster_name: xds_cluster
      set_node_on_first_message_only: true
    resource_api_version: V3

static_resources:
  listeners:
  - name: wavefront_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: wavefront_ingress
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              log_format:
                text_format: |
                  [%START_TIME%] "%REQ(:method)% %REQ(x-forwarded-proto)%://%REQ(:authority)%%REQ(:path)% %PROTOCOL%"
                  %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION%
                  "%REQ(x-forwarded-for)%" "%REQ(user-agent)%" "%REQ(x-request-id)%"
                  "%REQ(:authority)%" upstream_host="%UPSTREAM_HOST%" mirror_status="%MIRROR_STATUS%"
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: wavefront_route
            virtual_hosts:
            - name: wavefront_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/api/v2/wfproxy/"
                route:
                  cluster: collector_cluster
                  timeout: 30s
                request_mirror_policies:
                - cluster: capture_cluster
                  runtime_fraction:
                    default_value:
                      numerator: 0
                      denominator: HUNDRED
                    runtime_key: capture.enabled
              - match:
                  prefix: "/health"
                direct_response:
                  status: 200
                  body:
                    inline_string: "OK"
              - match:
                  prefix: "/ready"  
                direct_response:
                  status: 200
                  body:
                    inline_string: "READY"

  clusters:
  - name: collector_cluster
    connect_timeout: 5s
    type: EDS
    eds_cluster_config:
      eds_config:
        api_config_source:
          api_type: GRPC
          transport_api_version: V3
          grpc_services:
          - envoy_grpc:
              cluster_name: xds_cluster
    lb_policy: LEAST_REQUEST
    health_checks:
    - timeout: 2s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/health"
        expected_statuses:
        - start: 200
          end: 299
    outlier_detection:
      consecutive_5xx: 3
      interval: 10s
      base_ejection_time: 30s
      max_ejection_percent: 50
      split_external_local_origin_errors: true
  
  - name: capture_cluster
    connect_timeout: 200ms
    type: EDS
    eds_cluster_config:
      eds_config:
        api_config_source:
          api_type: GRPC
          transport_api_version: V3
          grpc_services:
          - envoy_grpc:
              cluster_name: xds_cluster
    lb_policy: ROUND_ROBIN
    # Capture cluster optimized for fast, non-critical mirroring
    upstream_connection_options:
      tcp_keepalive:
        keepalive_probes: 3
        keepalive_time: 10
        keepalive_interval: 5
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 32
        max_pending_requests: 64
        max_requests: 128
        max_retries: 0  # No retries for mirror traffic
        track_remaining: true
    # No health checks - mirror failures should not affect endpoint selection
    outlier_detection:
      consecutive_5xx: 10  # More lenient
      interval: 30s
      base_ejection_time: 10s
      max_ejection_percent: 25

  - name: xds_cluster
    connect_timeout: 1s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    upstream_connection_options:
      tcp_keepalive:
        keepalive_probes: 9
        keepalive_time: 30
        keepalive_interval: 5
    load_assignment:
      cluster_name: xds_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: "${XDS_SERVER_HOST}"
                port_value: 18000
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: "${XDS_SERVER_HOST}"

stats_config:
  stats_tags:
  - tag_name: cluster_name
    regex: "^cluster\\.((.+?)\\.).*$"
  - tag_name: listener_address
    regex: "^listener\\.((.+?)\\.).*$" 
  - tag_name: http_conn_manager_prefix
    regex: "^http\\.((.*?)\\.)"
  - tag_name: mirror_status
    regex: "^http\\..*\\.mirror\\.((.*?))$"

stats_sinks:
- name: envoy.stat_sinks.metrics_service
  typed_config:
    "@type": type.googleapis.com/envoy.extensions.stat_sinks.metrics_service.v3.MetricsServiceConfig
    transport_api_version: V3
    grpc_service:
      envoy_grpc:
        cluster_name: metrics_cluster
    emit_tags_as_labels: true

layered_runtime:
  layers:
  - name: rtds_layer
    rtds_layer:
      name: loadgen_runtime
      rtds_config:
        api_config_source:
          api_type: GRPC
          transport_api_version: V3
          grpc_services:
          - envoy_grpc:
              cluster_name: xds_cluster